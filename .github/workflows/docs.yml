name: Deploy Documentation

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v0.4.1, v0.4.2, etc.
    branches: 
      - main
      - master
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      repository-projects: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for version info
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        pip install mkdocs-material
    
    - name: Extract version from tag
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "IS_RELEASE=true" >> $GITHUB_OUTPUT
        else
          VERSION=$(grep '^version = ' Cargo.toml | cut -d'"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "IS_RELEASE=false" >> $GITHUB_OUTPUT
        fi
        echo "Detected version: $VERSION"
    
    - name: Update documentation with version
      run: |
        # Update version in mkdocs.yml
        sed -i "s/site_name: Xandeum Pod Documentation/site_name: Xandeum Pod Documentation v${{ steps.version.outputs.VERSION }}/" mkdocs.yml
        
        # Update version in docs
        find docs/ -name "*.md" -exec sed -i "s/pod 1\.0\.0/pod ${{ steps.version.outputs.VERSION }}/g" {} \;
        find docs/ -name "*.md" -exec sed -i "s/Pod v1\.0\.0/Pod v${{ steps.version.outputs.VERSION }}/g" {} \;
        
        # Add version info to homepage
        if [[ "${{ steps.version.outputs.IS_RELEASE }}" == "true" ]]; then
          sed -i '/^# Xandeum Pod Documentation/a\\n!!! info "Version"\n    This documentation is for **Xandeum Pod v${{ steps.version.outputs.VERSION }}**\n    Released: $(date +"%B %d, %Y")' docs/index.md
        fi
    
    - name: Build documentation
      run: mkdocs build --verbose
    
    - name: Checkout Test Documentation Repository
      uses: actions/checkout@v4
      continue-on-error: true
      id: checkout
      with:
        repository: Xandeum/test-doc
        path: doc-repo
        token: ${{ secrets.PAT }}
        ref: master
    
    - name: Initialize empty repository
      if: steps.checkout.outcome == 'failure'
      run: |
        echo "Repository appears to be empty, initializing..."
        rm -rf doc-repo
        git clone https://x-access-token:${{ secrets.PAT }}@github.com/Xandeum/test-doc.git doc-repo
        cd doc-repo
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        echo "# Xandeum Pod Documentation" > README.md
        git add README.md
        git commit -m "Initial commit - prepare for documentation deployment"
        git branch -M master
        git push origin master
    
    - name: Deploy documentation to test-doc repository
      run: |
        # Define paths
        REPO_DIR="${GITHUB_WORKSPACE}/doc-repo"
        SITE_DIR="${GITHUB_WORKSPACE}/site"
        
        # Copy the built documentation (replace all content)
        rm -rf "${REPO_DIR}"/*
        cp -r ${SITE_DIR}/* "${REPO_DIR}/"
        
        # Change into the repo directory
        cd "${REPO_DIR}"
        
        # Configure git
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Ensure we're on the right branch
        CURRENT_BRANCH=$(git branch --show-current)
        if [ "$CURRENT_BRANCH" != "master" ]; then
          echo "Current branch is $CURRENT_BRANCH, switching to master..."
          git checkout -B master
        fi
        
        # Add all changes
        git add -A .
        
        # Show status
        echo "--- Git status before commit: ---"
        git status
        
        # Commit the changes
        git commit --allow-empty -m "docs: Deploy Pod documentation v${{ steps.version.outputs.VERSION }}"
        
        # Push changes
        echo "--- Pushing documentation changes to master branch ---"
        git push origin master
