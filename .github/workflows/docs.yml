name: Deploy Documentation

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v0.4.1, v0.4.2, etc.
    branches: 
      - main
      - master
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for version info
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        pip install mkdocs-material
    
    - name: Extract version from tag
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "IS_RELEASE=true" >> $GITHUB_OUTPUT
        else
          VERSION=$(grep '^version = ' Cargo.toml | cut -d'"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "IS_RELEASE=false" >> $GITHUB_OUTPUT
        fi
        echo "Detected version: $VERSION"
    
    - name: Update documentation with version
      run: |
        # Update version in mkdocs.yml
        sed -i "s/site_name: Xandeum Pod Documentation/site_name: Xandeum Pod Documentation v${{ steps.version.outputs.VERSION }}/" mkdocs.yml
        
        # Update version in docs
        find docs/ -name "*.md" -exec sed -i "s/pod 1\.0\.0/pod ${{ steps.version.outputs.VERSION }}/g" {} \;
        find docs/ -name "*.md" -exec sed -i "s/Pod v1\.0\.0/Pod v${{ steps.version.outputs.VERSION }}/g" {} \;
        
        # Add version info to homepage
        if [[ "${{ steps.version.outputs.IS_RELEASE }}" == "true" ]]; then
          sed -i '/^# Xandeum Pod Documentation/a\\n!!! info "Version"\n    This documentation is for **Xandeum Pod v${{ steps.version.outputs.VERSION }}**\n    Released: $(date +"%B %d, %Y")' docs/index.md
        fi
    
    - name: Build documentation
      run: mkdocs build --verbose
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./site

  deploy:
    if: always() && needs.build.result == 'success' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 
