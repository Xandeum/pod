# .github/workflows/release.yml (Final Version)

name: Build and Publish to APT Repository (GPG-Free)

on:
  push:
    tags:
      - 'v*'

jobs:
  publish-deb-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pod repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install cargo-deb
        run: cargo install cargo-deb
      - name: Build Debian package
        run: cargo deb

      - name: Checkout APT repository
        uses: actions/checkout@v4
        with:
          repository: Xandeum/pod-apt-package
          path: apt-repo
          token: ${{ secrets.PAT }}

      - name: Update APT repository metadata
        run: |
          # Define paths
          REPO_DIR="${GITHUB_WORKSPACE}/apt-repo"
          DEB_DIR="${GITHUB_WORKSPACE}/target/debian"

          # Create the repository structure
          mkdir -p "${REPO_DIR}/dists/stable/main/binary-amd64"
          mkdir -p "${REPO_DIR}/pool/main"

          # Copy the built .deb package
          cp ${DEB_DIR}/*.deb "${REPO_DIR}/pool/main/"

          # Change into the repo directory to ensure all paths are relative and correct
          cd "${REPO_DIR}"

          # --- Generate and SAVE the metadata files ---
          # This time with the output redirection '>' to save the files
          echo "Generating and saving Packages file..."
          dpkg-scanpackages --multiversion pool > dists/stable/main/binary-amd64/Packages

          echo "Compressing Packages file..."
          gzip -9 -c dists/stable/main/binary-amd64/Packages > dists/stable/main/binary-amd64/Packages.gz

          echo "Generating and saving Release file..."
          apt-ftparchive release dists/stable > dists/stable/Release

      - name: Commit and push changes
        run: |
          cd "${GITHUB_WORKSPACE}/apt-repo"
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          if ! git diff-index --quiet HEAD; then
            echo "Changes detected. Committing and pushing to APT repository..."
            git add .
            git commit -m "ci: Add pod package version ${{ github.ref_name }}"
            git push
          else
            echo "No changes to commit."
          fi